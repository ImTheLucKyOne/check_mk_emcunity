#!/usr/bin/env python3
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# License: GNU General Public License v2

# Written/Edited by Philipp NÃ¤ther
# philipp.naether@stadt-meissen.de
# andreas.doehler@gmail.com

# 1:    ID                      = spb_iom_0_fc3
#       Name                    = SP B I/O Module 0 FC Port 3
#       SP                      = spb
#       WWN                     = 50:06:01:60:C7:E0:15:EA:50:06:01:6F:47:E0:15:EA
#       Speed                   =
#       Requested speed         =
#       Available speeds        = 4 Gbps, 8 Gbps, 16 Gbps, auto
#       Health state            = OK (5)
#       Health details          = "The port link is down, but not in use. No action is required."
#       Connector type          = LC
#       SFP supported speeds    = 4 Gbps, 8 Gbps, 16 Gbps
#       SFP supported protocols = FibreChannel
#       Replication capability  = RecoverPoint
#       SFP supported mode      = MultiMode
# 
# 2:    ID                      = spa_iom_0_fc1
#       Name                    = SP A I/O Module 0 FC Port 1
#       SP                      = spa
#       WWN                     = 50:06:01:60:C7:E0:15:EA:50:06:01:65:47:E0:15:EA
#       Speed                   = 16 Gbps
#       Requested speed         =
#       Available speeds        = 4 Gbps, 8 Gbps, 16 Gbps, auto
#       Health state            = OK (5)
#       Health details          = "The port is operating normally."
#       Connector type          = LC
#       SFP supported speeds    = 4 Gbps, 8 Gbps, 16 Gbps
#       SFP supported protocols = FibreChannel
#       Replication capability  = RecoverPoint
#       SFP supported mode      = MultiMode

def inventory_emcunity_fc(info):
    keys = None
    fcs = emcunity_parse_info(info, keys)
    for fc in fcs:
        tokens = re.split(" ", fcs[fc]["Name"])
        item = "FC %s%s" % (tokens[1], tokens[-1])
        yield item, None


def check_emcunity_fc(item, params, info):
    keys = [ "Name", "Health state", "Health details", "Speed" ]
    fcs = emcunity_parse_info(info, keys)
    for fc in fcs:
        tokens = re.split(" ", fcs[fc]["Name"])
        name = "FC %s%s" % (tokens[1], tokens[-1])
        if name == item:
            hstate = fcs[fc]["Health state"]
            hdetail = fcs[fc]["Health details"]
            speed = fcs[fc]["Speed"]
    return parse_emcstate(hstate), "%s, %s, Speed: %s" % (hstate, hdetail, speed)


check_info["emcunity_fc"] = {
    'check_function'         :    check_emcunity_fc,
    'inventory_function'     :    inventory_emcunity_fc,
    'service_description'    :    'Interface %s',
    'includes'               :    [ 'emcunity.include' ],
}
